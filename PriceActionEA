#include <Trade/Trade.mqh>

input double Lots = 0.01;
input int LevelDistancePoints = 100;

CTrade trade;
double baseLevel;

int OnInit()
  {
   return(INIT_SUCCEEDED);
  }

void OnDeinit(const int reason)
  {
   
  }
void OnTick()
  {
    double bid = SymbolInfoDouble(_Symbol,SYMBOL_BID);
    if(baseLevel == 0){
      baseLevel = bid;
    }

    if(bid > baseLevel + LevelDistancePoints * _Point){
      for (int i = PositionsTotal()-1; i >= 0; i--){
        ulong posTicket = PositionGetTicket(i);
        if(PositionSelectByTicket(posTicket)){
          if(PositionGetInteger(POSITION_TYPE) == POSITION_TYPE_SELL){
            trade.PositionClose(posTicket);
          }
        }
      }
      
      //buy
      trade.Buy(Lots);
      baseLevel += LevelDistancePoints * _Point;

    }else if(bid < baseLevel - LevelDistancePoints * _Point){
      for (int i = PositionsTotal()-1; i >= 0; i--){
        ulong posTicket = PositionGetTicket(i);
        if(PositionSelectByTicket(posTicket)){
          if(PositionGetInteger(POSITION_TYPE) == POSITION_TYPE_BUY){
            trade.PositionClose(posTicket);
          }
        }
      }
      //sell
      trade.Sell(Lots);
      baseLevel -= LevelDistancePoints * _Point;
    }
  }
